@import 'global-variables';

$line-height-computed:           floor(($font-size-base * $line-height-base));
$line-height-large:              1.3333333;
$line-height-small:              1.5;

$padding-base-vertical:          6px;
$padding-base-horizontal:        12px;
$padding-large-vertical:         10px;
$padding-large-horizontal:       16px;
$padding-small-vertical:         5px;
$padding-small-horizontal:       10px;

$border-radius-small:            3px;
$border-radius-base:             4px;
$border-radius-large:            6px;

$input-bg:                       #fff;
$input-bg-disabled:              $gray-lighter;
$input-color:                    $gray;
$input-border:                   #ccc;
$input-border-radius:            $border-radius-base;
$input-border-radius-large:      $border-radius-large;
$input-border-radius-small:      $border-radius-small;
$input-border-focus:             #66afe9;
$input-color-placeholder:        #999;
$input-height-base:              ($line-height-computed + ($padding-base-vertical * 2) + 2);
$input-height-large:             (ceil($font-size-large * $line-height-large) + ($padding-large-vertical * 2) + 2);
$input-height-small:             (floor($font-size-small * $line-height-small) + ($padding-small-vertical * 2) + 2);
$form-group-margin-bottom:       15px;
$legend-color:                   $gray-base;
$legend-border-color:            #e5e5e5;
$input-group-addon-bg:           $gray-lighter;
$input-group-addon-border-color: $input-border;
$cursor-disabled:                not-allowed;

$state-success-text:             #3c763d;
$state-success-bg:               #dff0d8;
$state-success-border:           darken(adjust-hue($state-success-bg, -10), 5%);

$state-info-text:                #31708f;
$state-info-bg:                  #d9edf7;
$state-info-border:              darken(adjust-hue($state-info-bg, -10), 7%);

$state-warning-text:             #8a6d3b;
$state-warning-bg:               #fcf8e3;
$state-warning-border:           darken(adjust-hue($state-warning-bg, -10), 5%);

$state-danger-text:              #a94442;
$state-danger-bg:                #f2dede;
$state-danger-border:            darken(adjust-hue($state-danger-bg, -10), 5%);

$grid-gutter-width:              20px;

@mixin form-control-validation($text-color: #555, $border-color: #ccc, $background-color: #f5f5f5) {
  .help-block,
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline {
    color: $text-color;
  }

  &.radio,
  &.checkbox,
  &.radio-inline,
  &.checkbox-inline   {
    label {
      color: $text-color;
    }
  }

  .form-control {
    border-color: $border-color;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075); // Redeclare so transitions work

    &:focus {
      border-color: darken($border-color, 10%);
      $shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px lighten($border-color, 20%);
      box-shadow: $shadow;
    }
  }

  .input-group-addon {
    color: $text-color;
    border-color: $border-color;
    background-color: $background-color;
  }

  .form-control-feedback {
    color: $text-color;
  }
}

@mixin input-size($parent, $input-height, $padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  #{$parent} {
    height: $input-height;
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    line-height: $line-height;
    border-radius: $border-radius;
  }

  select#{$parent} {
    height: $input-height;
    line-height: $input-height;
  }

  textarea#{$parent} {
    // select[multiple]#{$parent} {
    height: auto;
  }
}

input {
  box-sizing: border-box;

  &[type='radio'], 
  &[type='checkbox'] {
    margin: 4px 0 0;
    margin-top: 1px \9; // IE8-9
    line-height: normal;

    &[disabled],
    &.disabled,
    fieldset[disabled] & {
      cursor: $cursor-disabled;
    }
  }

  &[type='file'] {
    display: block;
  }

  &[type='range'] {
    display: block;
    width: 100%;
  }

  &[multiple],
  &[size] {
    height: auto;
  }

  &[type='search'] {
    box-sizing: border-box;
    -webkit-appearance: none;
  }
}

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $line-height-computed;
  font-size: ($font-size-base * 1.5);
  line-height: inherit;
  color: $legend-color;
  border: 0;
  border-bottom: 1px solid $legend-border-color;
}

label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  margin-bottom: 5px;
  font-weight: bold;
}

output {
  display: block;
  padding-top: ($padding-base-vertical + 1);
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
}

.form-control {
  display: block;
  width: 100%;
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical $padding-base-horizontal;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $input-border;
  border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
  transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;

  $color-rgba: rgba(red($input-border-focus), green($input-border-focus), blue($input-border-focus), .6);

  &:focus {
    border-color: $input-border-focus;
    outline: 0;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px $color-rgba;
  }

  // Firefox
  &::-moz-placeholder {
    color: $input-color-placeholder;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }

  &:-ms-input-placeholder { color: $input-color-placeholder; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $input-color-placeholder; } // Safari and Chrome

  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  &[disabled],
  &[readonly] {
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled] {
    cursor: $cursor-disabled;
  }

  fieldset {
    &[disabled] & {
      cursor: $cursor-disabled;
      background-color: $input-bg-disabled;
      opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
    }
  }
}

textarea.form-control {
  height: auto;
}

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input {
    &[type='date'],
    &[type='time'],
    &[type='datetime-local'],
    &[type='month'] {
      &.form-control {
        line-height: $input-height-base;
      }

      &.input-sm,
      .input-group-sm & {
        line-height: $input-height-small;
      }

      &.input-lg,
      .input-group-lg & {
        line-height: $input-height-large;
      }
    }
  }
}

.form-group {
  margin-bottom: $form-group-margin-bottom;
}

.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;

  label {
    min-height: $line-height-computed;
    padding-left: 20px;
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}

.radio,
.radio-inline,
.checkbox,
.checkbox-inline {
  input {
    &[type='radio'],
    &[type='radio'],
    &[type='checkbox'],
    &[type='checkbox'] {
      position: absolute;
      margin-left: -20px;
      margin-top: 4px \9;
    }
  }
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px;
}

.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;

  &.disabled {
    cursor: $cursor-disabled;
  }

  fieldset {
    &[disabled] & {
      cursor: $cursor-disabled;
    }
  }
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

.radio,
.checkbox {
  &.disabled,
  fieldset {
    &[disabled] & {
      label {
        cursor: $cursor-disabled;
      }
    }
  }
}

.form-control-static {
  padding-top: ($padding-base-vertical + 1);
  padding-bottom: ($padding-base-vertical + 1);
  margin-bottom: 0;
  min-height: ($line-height-computed + $font-size-base);

  &.input-lg,
  &.input-sm {
    padding-left: 0;
    padding-right: 0;
  }
}

@include input-size('.input-sm', $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $input-border-radius-small);

.form-group-sm {
  .form-control {
    height: $input-height-small;
    padding: $padding-small-vertical $padding-small-horizontal;
    font-size: $font-size-small;
    line-height: $line-height-small;
    border-radius: $input-border-radius-small;
  }

  select.form-control {
    height: $input-height-small;
    line-height: $input-height-small;
  }

  textarea.form-control,
  select[multiple].form-control {
    height: auto;
  }

  .form-control-static {
    height: $input-height-small;
    min-height: ($line-height-computed + $font-size-small);
    padding: ($padding-small-vertical + 1) $padding-small-horizontal;
    font-size: $font-size-small;
    line-height: $line-height-small;
  }
}

@include input-size('.input-lg', $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $input-border-radius-large);

.form-group-lg {
  .form-control {
    height: $input-height-large;
    padding: $padding-large-vertical $padding-large-horizontal;
    font-size: $font-size-large;
    line-height: $line-height-large;
    border-radius: $input-border-radius-large;
  }

  select.form-control {
    height: $input-height-large;
    line-height: $input-height-large;
  }

  textarea.form-control,
  select[multiple].form-control {
    height: auto;
  }

  .form-control-static {
    height: $input-height-large;
    min-height: ($line-height-computed + $font-size-large);
    padding: ($padding-large-vertical + 1) $padding-large-horizontal;
    font-size: $font-size-large;
    line-height: $line-height-large;
  }
}

.has-feedback {
  position: relative;

  .form-control {
    padding-right: ($input-height-base * 1.25);
  }
}

.form-control-feedback {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2; // Ensure icon is above input groups
  display: block;
  width: $input-height-base;
  height: $input-height-base;
  line-height: $input-height-base;
  text-align: center;
  pointer-events: none;
}

.input-lg + .form-control-feedback,
.input-group-lg + .form-control-feedback,
.form-group-lg .form-control + .form-control-feedback {
  width: $input-height-large;
  height: $input-height-large;
  line-height: $input-height-large;
}

.input-sm + .form-control-feedback,
.input-group-sm + .form-control-feedback,
.form-group-sm .form-control + .form-control-feedback {
  width: $input-height-small;
  height: $input-height-small;
  line-height: $input-height-small;
}

.has-success {
  @include form-control-validation($state-success-text, $state-success-text, $state-success-bg);
}

.has-warning {
  @include form-control-validation($state-warning-text, $state-warning-text, $state-warning-bg);
}

.has-error {
  @include form-control-validation($state-danger-text, $state-danger-text, $state-danger-bg);
}

.has-feedback label {
  & ~ .form-control-feedback {
    top: ($line-height-computed + 5); // Height of the `label` and its margin
  }

  &.sr-only ~ .form-control-feedback {
    top: 0;
  }
}

.help-block {
  display: block; // account for any element using help-block
  margin-top: 5px;
  margin-bottom: 10px;
  color: lighten($text-color, 25%); // lighten the text some for contrast
}

@mixin form-inline {
  @media (min-width: 768px) {
    .form-group {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
    }

    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    .form-control-static {
      display: inline-block;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-addon,
      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    .input-group > .form-control {
      width: 100%;
    }

    .control-label {
      margin-bottom: 0;
      vertical-align: middle;
    }

    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }

    .radio,
    .checkbox {
      input {
        [type='radio'],
        [type='checkbox'] {
          position: relative;
          margin-left: 0;
        }
      }
    }

    .has-feedback {
      .form-control-feedback {
        top: 0;
      }
    }
  }
}

.form-inline {
  @include form-inline;
}

.form-horizontal {
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: ($padding-base-vertical + 1); // Default padding plus a border
  }

  .radio,
  .checkbox {
    min-height: ($line-height-computed + ($padding-base-vertical + 1));
  }

  .form-group {
    margin-left:  ceil(($grid-gutter-width / -2));
    margin-right: floor(($grid-gutter-width / -2));

    &::before,
    &::after {
      content: ' ';
      display: table;
    }

    &::after {
      clear: both;
    }
  }

  @media (min-width: 768px) {
    .control-label {
      text-align: right;
      margin-bottom: 0;
      padding-top: ($padding-base-vertical + 1); // Default padding plus a border
    }
  }

  .has-feedback {
    .form-control-feedback {
      right: floor(($grid-gutter-width / 2));
    }
  }
}
